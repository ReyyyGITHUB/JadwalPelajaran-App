  const jadwalData = {
    senin: {
      ruang: "R Kelas 4",
      jadwal: [
        { mapel: "Pendidikan Agama", jam: "08.30 - 10.00", guru: "Miftahul Maf'ulah, S.Ag" },
        { mapel: "Bahasa Inggris", jam: "12.15 - 13.45", guru: "Kalim, S.Pd" },
        { mapel: "Bahasa Indonesia", jam: "10.15 - 11.45", guru: "Ever Nicolas, S.Pd" },
        { mapel: "Pendidikan Olahraga", jam: "14.00 - 15.30", guru: "Dani Eko Prasetiyo, S.Pd" }
      ]
    },
    selasa: {
      ruang: "Lab PPLG 3",
      jadwal: [
        { mapel: "Informatika", jam: "08.30 - 10.00", guru: "Andreas Aris Suhartono, S.T" },
        { mapel: "Pemrograman Dasar", jam: "10.15 - 11.45", guru: "Agung Setiawan, S.Kom" },
        { mapel: "Pemrograman Dasar", jam: "14.00 - 15.30", guru: "Yari Imantis Abdillah, S.Pd" }
      ]
    },
    rabu: {
      ruang: "R Kelas 12",
      jadwal: [
        { mapel: "Bahasa Inggris", jam: "07.00 - 08.30", guru: "Kalim, S.Pd" },
        { mapel: "Matematika", jam: "08.30 - 10.00", guru: "Chofiriyah, S.Pd, M.Pd" },
        { mapel: "Projek Penguatan Profil Pelajar Pancasila", jam: "10.15 - 11.45", guru: "Sri Astuti Setiani, S.Pd" },
        { mapel: "Seni Musik", jam: "12.15 - 13.45", guru: "Elin Surya Shabrina, S.Pd" },
        { mapel: "Sejarah", jam: "14.00 - 15.30", guru: "Sri Astuti Setiani, S.Pd" }
      ]
    },
    kamis: {
      ruang: "R Kelas 11",
      jadwal: [
        { mapel: "Matematika", jam: "07.00 - 08.30", guru: "Chofiriyah, S.Pd, M.Pd" },
        { mapel: "IPAS", jam: "10.15 - 11.45", guru: "Uly Fitrisia Ghani, S.Pd" },
        { mapel: "Bahasa Jawa", jam: "12.15 - 13.45", guru: "Fanatut Khikmatil, S.Pd" },
        { mapel: "Bahasa Inggris", jam: "14.00 - 15.30", guru: "Ever Nicolas, S.Pd" }
      ]
    },
    jumat: {
      ruang: "Lab PPLG 4",
      jadwal: [
        { mapel: "IPAS", jam: "07.00 - 08.30", guru: "Uly Fitrisia Ghani, S.Pd" },
        { mapel: "Pengembangan Game", jam: "08.30 - 10.00", guru: "Ahmad Zafir Hasmi, S.Pd" },
        { mapel: "KKA", jam: "10.15 - 11.45", guru: "Ahmad Zafir Hasmi, S.Pd" },
        { mapel: "Pemrograman Dasar", jam: "12.15 - 13.45", guru: "Agung Setiawan, S.Kom" }
      ]
    }
  };

  // Day Selection Component
  function DaySelection({ onSelectDay, onClose }) {
    const days = [
      { key: 'senin', name: 'Senin', color: 'from-emerald-400 to-teal-500' },
      { key: 'selasa', name: 'Selasa', color: 'from-blue-400 to-indigo-500' },
      { key: 'rabu', name: 'Rabu', color: 'from-purple-400 to-pink-500' },
      { key: 'kamis', name: 'Kamis', color: 'from-orange-400 to-red-500' },
      { key: 'jumat', name: 'Jumat', color: 'from-green-400 to-emerald-500' }
    ];

    return (
      <div className="fixed inset-0 bg-black/60 backdrop-blur-sm flex justify-center items-center z-50 p-4" onClick={onClose}>
        <div 
          className="w-full max-w-sm bg-gradient-to-br from-slate-800/95 to-slate-900/95 backdrop-blur-xl p-6 flex flex-col gap-4 border border-slate-600/30 rounded-2xl shadow-2xl"
          onClick={(e) => e.stopPropagation()}
        >
          <div className="text-center">
            <div className="w-12 h-12 bg-gradient-to-r from-emerald-400 to-teal-500 rounded-full mx-auto mb-3 flex items-center justify-center">
              <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 002 2z" />
              </svg>
            </div>
            <h2 className="font-bold  text-xl mb-2 bg-gradient-to-r from-emerald-400 to-teal-400 bg-clip-text text-transparent">Pilih Hari</h2>
            <p className="text-slate-300 text-sm">Pilih hari untuk melihat jadwal pelajaran</p>
          </div>
          
          <div className="flex flex-col gap-2">
            {days.map((day) => (
              <button
                key={day.key}
                onClick={() => onSelectDay(day.key)}
                className={`relative overflow-hidden bg-gradient-to-r ${day.color} p-[1px] rounded-xl active:bg-opacity-80`}
              >
                <div className="bg-slate-800/90 backdrop-blur rounded-xl py-3 px-4">
                  <div className="flex items-center justify-between">
                    <span className="text-white text-base font-semibold">{day.name}</span>
                    <div className={`w-2 h-2 rounded-full bg-gradient-to-r ${day.color}`}></div>
                  </div>
                </div>
              </button>
            ))}
          </div>
          
          <button 
            onClick={onClose}
            className="bg-slate-700/80 text-slate-300 px-4 py-3 rounded-xl font-medium text-sm border border-slate-600/30 active:bg-slate-600/80"
          >
            Batal
          </button>
        </div>
      </div>
    );
  }

  // Overlay component
  function Overlay({ selectedDay, onClose, onBack }) {
    const dayData = jadwalData[selectedDay];
    const dayName = selectedDay.charAt(0).toUpperCase() + selectedDay.slice(1);
    
    const subjectColors = [
      'from-blue-500 to-cyan-500',
      'from-purple-500 to-pink-500', 
      'from-emerald-500 to-teal-500',
      'from-orange-500 to-red-500',
      'from-indigo-500 to-purple-500'
    ];

    return (
      <div className="fixed inset-0 bg-black/60 backdrop-blur-sm flex justify-center items-center z-50 p-4" onClick={onClose}>
        <div 
          className="w-full max-w-md max-h-[90vh] overflow-y-auto bg-gradient-to-br from-slate-800/95 to-slate-900/95 backdrop-blur-xl p-5 flex flex-col gap-5 border border-slate-600/30 rounded-2xl shadow-2xl custom-scrollbar"
          onClick={(e) => e.stopPropagation()}
        >
          {/* Header dengan gradient background */}
          <div className="relative bg-gradient-to-r from-emerald-500/20 to-teal-500/20 p-4 rounded-xl border border-emerald-500/20">
            <div className="absolute inset-0 bg-gradient-to-r from-emerald-400/10 to-teal-400/10 rounded-xl"></div>
            <div className="relative text-center sm:flex sm:justify-between sm:items-start sm:text-left">
              <div>
                <span className="text-emerald-300 text-xs font-medium uppercase tracking-wider">
                  Jadwal Hari
                </span>
                <h2 className="text-white text-2xl font-bold mt-1">{dayName}</h2>
              </div>
              <div className="mt-2 sm:mt-0 sm:text-right">
                <span className="text-emerald-300 text-xs font-medium uppercase tracking-wider">
                  Ruangan
                </span>
                <p className="text-white text-lg font-bold mt-1">{dayData.ruang}</p>
              </div>
            </div>
          </div>

          {/* Jadwal Cards - Mobile friendly flex column layout */}
          <div className="space-y-3">
            {dayData.jadwal.map((item, index) => {
              const colorClass = subjectColors[index % subjectColors.length];
              return (
                <div 
                  key={index} 
                  className="bg-gradient-to-br from-slate-700/50 to-slate-800/50 backdrop-blur-sm border border-slate-600/30 rounded-xl p-4"
                >
                  {/* Nama Guru */}
                  <div className="flex items-center gap-2 mb-3">
                    <div className="w-8 h-8 bg-gradient-to-r from-slate-600 to-slate-700 rounded-full flex items-center justify-center flex-shrink-0">
                      <svg className="w-4 h-4 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                    </div>
                    <div className="min-w-0 flex-1">
                      <span className="text-slate-400 text-xs font-medium uppercase tracking-wider">Pengajar</span>
                      <p className="text-white font-medium text-sm leading-tight break-words">{item.guru}</p>
                    </div>
                  </div>
                  
                  {/* Mata Pelajaran & Waktu - Mobile friendly column layout */}
                  <div className="flex flex-col gap-2">
                    {/* Mata Pelajaran */}
                    <div className={`bg-gradient-to-r ${colorClass} p-[1px] rounded-lg`}>
                      <div className="bg-slate-800/80 backdrop-blur rounded-lg py-2 px-3">
                        <span className="text-white font-semibold text-sm block text-center leading-tight">
                          {item.mapel}
                        </span>
                      </div>
                    </div>
                    
                    {/* Waktu */}
                    <div className="bg-slate-700/60 border border-slate-500/30 rounded-lg py-2 px-3">
                      <div className="flex items-center justify-center gap-2">
                        <svg className="w-4 h-4 text-emerald-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span className="text-white font-semibold text-sm">
                          {item.jam}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
          
          {/* Action Buttons - Mobile friendly stacked layout */}
          <div className="flex flex-col gap-2 mt-4 pt-4 border-t border-slate-600/30">
            <button 
              onClick={onBack}
              className="bg-slate-700/80 text-slate-300 px-4 py-3 rounded-xl font-medium text-sm border border-slate-600/30 flex items-center justify-center gap-2 active:bg-slate-600/80"
            >
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              Pilih Hari Lain
            </button>
            <button 
              onClick={onClose}
              className="bg-gradient-to-r from-emerald-500 to-teal-500 text-white px-4 py-3 rounded-xl font-semibold text-sm shadow-md flex items-center justify-center gap-2 active:from-emerald-600 active:to-teal-600"
            >
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
              Tutup
            </button>
          </div>
        </div>
        
        {/* Simplified Custom Scrollbar Styles */}
        <style jsx>{`
          .custom-scrollbar::-webkit-scrollbar {
            width: 4px;
          }
          .custom-scrollbar::-webkit-scrollbar-track {
            background: rgba(51, 65, 85, 0.3);
            border-radius: 8px;
          }
          .custom-scrollbar::-webkit-scrollbar-thumb {
            background: linear-gradient(to bottom, #10b981, #0d9488);
            border-radius: 8px;
          }
          .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(to bottom, #059669, #0f766e);
          }
        `}</style>
      </div>
    );
  }

  export default function Home() {
    const [showDaySelection, setShowDaySelection] = useState(false);
    const [showOverlay, setShowOverlay] = useState(false);
    const [selectedDay, setSelectedDay] = useState('senin');

    const handleShowJadwal = () => {
      setShowDaySelection(true);
    };

    const handleSelectDay = (day) => {
      setSelectedDay(day);
      setShowDaySelection(false);
      setShowOverlay(true);
    };

    const handleCloseAll = () => {
      setShowDaySelection(false);
      setShowOverlay(false);
    };

    const handleBackToDaySelection = () => {
      setShowOverlay(false);
      setShowDaySelection(true);
    };
